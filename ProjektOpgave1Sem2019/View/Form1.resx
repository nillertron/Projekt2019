<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>